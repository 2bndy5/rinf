name: Build Test
on: [push, pull_request, workflow_dispatch]
concurrency:
  # Cancels the workflow
  # when another event in the same context happens.
  # If it's a PR, context is the pull request number.
  # Otherwise, it uses the Git reference(branch or tag name).
  group: >
    ${{ github.workflow }}
    ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 60
    strategy:
      fail-fast: false # important
      matrix:
        os: [linux, windows, macos]
        runner: []
        target: [android, web] # On all platforms
        include:
          # Specify runners
          - os: linux
            runner: ubuntu-latest
          - os: windows
            runner: windows-latest
          - os: macos
            runner: macos-latest
          # Specify targets
          - os: linux
            target: linux
          - os: windows
            target: windows
          - os: macos
            target: macos
          - os: macos
            target: ios

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Setup Flutter toolchain
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Ninja and GTK3 toolchain (Only Linux platform)
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Setup Java toolchain (Only Android target)
        if: matrix.target == 'android' || matrix.target == 'appbundle'
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"

      - name: Fetch dependencies
        working-directory: example/
        run: flutter pub get

      - name: Build example Flutter app
        if: matrix.target == 'linux'
        working-directory: example/
        run: flutter build linux

      - name: Build example Flutter app
        if: matrix.target == 'android'
        working-directory: example/
        run: flutter build apk

      - name: Build example Flutter app
        if: matrix.target == 'windows'
        working-directory: example/
        run: flutter build windows

      - name: Build example Flutter app
        if: matrix.target == 'macos'
        working-directory: example/
        run: flutter build macos

      - name: Build example Flutter app
        if: matrix.target == 'ios'
        working-directory: example/
        run: flutter build ios --no-codesign

      - name: Build example Flutter app
        if: matrix.target == 'web'
        working-directory: example/
        run: |
          dart run rust_in_flutter wasm --release
          flutter build web
